## The nuget api key
nugetApiKey: ""

## The nuget host override
nugetHost: localhost

## Allows forcing https
nugetDefaultHttp: http

## rolfwessels nuget-server image version
## ref: https://hub.docker.com/r/rolfwessels/docker-simple-nuget-server/
##
image:
  repository: rolfwessels/docker-simple-nuget-server
  tag: "v1.1.11"
  pullPolicy: IfNotPresent
  # www-data -> uid 33
  # TODO: do not run as root
  runAsUser: 0

# Can be changed to old api for compatibility reasons: extensions/v1beta1
apiVersion: apps/v1

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    memory: 100Mi
    cpu: 50m

## Enable RBAC as per https://github.com/kubernetes/ingress/tree/master/examples/rbac/nginx and https://github.com/kubernetes/ingress/issues/266
rbac:
  create: true

# If true, create & use Pod Security Policy resources
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: false

serviceAccount:
  create: true
  name:

## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

# To be added to the database server pod(s)
podAnnotations: {}

podLabels: {}

## Persist data to a persistent volume
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}

## Configure the service
## ref: http://kubernetes.io/docs/user-guide/services/
service:
  annotations: {}
  ## Specify a service type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types
  type: ClusterIP
  port: 80
  # nodePort: 32000
  # loadBalancerIP:

ingress:
  enabled: false

  # Can be changed to old api for compatibility reasons: extensions/v1beta1
  apiVersion: networking.k8s.io/v1beta1

  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local